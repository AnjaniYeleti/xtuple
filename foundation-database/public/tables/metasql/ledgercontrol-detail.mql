-- Group: ledgercontrol
-- Name:  detail
-- Notes: query to log ledger control values
--        adds the child accounts

SELECT forwardUpdateAccount(accnt_id)
  FROM accnt;
WITH subledgers AS
(
  WITH trialbal AS
  (
   SELECT trialbal_accnt_id, trialbal_ending, period_end
     FROM trialbal
     JOIN period ON trialbal_period_id = period_id
    WHERE CURRENT_DATE BETWEEN period_start AND period_end
  )
  SELECT 'Payables' AS ledger, 1 AS seq, 1 AS sense,
         trialbal_accnt_id, trialbal_ending,
         SUM(subledger) AS subledger
    FROM trialbal
    LEFT OUTER JOIN (
                     SELECT findAPAccount(apopen_vend_id) AS accnt_id,
                            ROUND((apopen_amount - apopen_paid) / apopen_curr_rate *
                                  CASE WHEN apopen_doctype IN ('V', 'D')
                                       THEN 1
                                       ELSE -1
                                   END, 2) AS subledger
                       FROM apopen
                      WHERE apopen_docdate <= (SELECT period_end
                                                 FROM period
                                                WHERE CURRENT_DATE BETWEEN period_start AND period_end)
                        AND apopen_open
                    ) apopen ON trialbal_accnt_id = accnt_id
   WHERE trialbal_accnt_id IN (SELECT apaccnt_ap_accnt_id
                                 FROM apaccnt)
   GROUP BY trialbal_accnt_id, trialbal_ending
  UNION ALL
  SELECT 'Uninvoiced Receipts' AS ledger, 2 AS seq, 1 AS sense,
         trialbal_accnt_id, trialbal_ending,
         SUM(subledger) AS subledger
    FROM trialbal
    LEFT OUTER JOIN (SELECT COALESCE(costcat_liability_accnt_id,
                                     expcat_liability_accnt_id) AS accnt_id,
                            recv_value AS subledger
                       FROM poitem
                       LEFT OUTER JOIN itemsite ON poitem_itemsite_id = itemsite_id
                       LEFT OUTER JOIN costcat ON itemsite_costcat_id = costcat_id
                       LEFT OUTER JOIN expcat ON poitem_expcat_id = expcat_id
                       LEFT OUTER JOIN (SELECT recv_orderitem_id AS recv_poitem_id, recv_vohead_id,
                                               recv_posted, recv_invoiced,
                                               ROUND(recv_qty * recv_recvcost, 2) AS recv_value
                                          FROM recv
                                         WHERE recv_order_type = 'PO'
                                        UNION ALL
                                        SELECT poreject_poitem_id, poreject_vohead_id,
                                               poreject_posted, poreject_invoiced,
                                               poreject_value * -1
                                          FROM poreject
                                       ) recv ON poitem_id = recv_poitem_id
                                             AND recv_vohead_id IS NULL
                                             AND recv_posted
                                             AND NOT recv_invoiced
                    ) recv ON trialbal_accnt_id = accnt_id
   WHERE trialbal_accnt_id IN (SELECT costcat_liability_accnt_id AS liability_accnt_id
                                 FROM costcat
                               UNION ALL
                               SELECT expcat_liability_accnt_id
                                 FROM expcat)
   GROUP BY trialbal_accnt_id, trialbal_ending
  UNION ALL
  SELECT 'Receivables', 3 AS seq, -1 AS sense,
         trialbal_accnt_id, trialbal_ending,
         SUM(subledger) AS subledger
    FROM trialbal
    LEFT OUTER JOIN (
                     SELECT CASE WHEN aropen_doctype != 'R'
                                 THEN findARAccount(aropen_cust_id)
                                 ELSE findDeferredAccount(aropen_cust_id)
                             END AS accnt_id,
                            ROUND((aropen_amount - aropen_paid) / aropen_curr_rate *
                                  CASE WHEN aropen_doctype IN ('I', 'D')
                                       THEN 1
                                       ELSE -1
                                   END, 2) AS subledger
                       FROM aropen
                      WHERE aropen_docdate <= (SELECT period_end
                                                 FROM period
                                                WHERE CURRENT_DATE BETWEEN period_start AND period_end)
                        AND aropen_open
                        AND aropen_closedate IS NULL
                    ) aropen ON trialbal_accnt_id = accnt_id
   WHERE trialbal_accnt_id IN (SELECT araccnt_ar_accnt_id
                                 FROM araccnt
                               UNION ALL
                               SELECT araccnt_deferred_accnt_id
                                 FROM araccnt)
   GROUP BY trialbal_accnt_id, trialbal_ending
  UNION ALL
  SELECT 'Inventory', 4 AS seq, -1 AS sense,
         trialbal_accnt_id, trialbal_ending,
         SUM(subledger) AS subledger
    FROM trialbal
    LEFT OUTER JOIN (SELECT costcat_asset_accnt_id AS accnt_id,
                            CASE itemsite_costmethod WHEN 'S' THEN ROUND(itemsite_qtyonhand *
                                                                         stdcost(itemsite_item_id),
                                                                         2)
                                                     WHEN 'A' THEN ROUND(itemsite_value, 2)
                                                     ELSE 0.0
                             END AS subledger
                       FROM itemsite
                       JOIN costcat ON itemsite_costcat_id = costcat_id
                    ) itemsite ON trialbal_accnt_id = accnt_id
   WHERE trialbal_accnt_id IN (SELECT costcat_asset_accnt_id
                            FROM costcat)
   GROUP BY trialbal_accnt_id, trialbal_ending
UNION ALL
  SELECT 'WIP', 5 AS seq, -1 AS sense,
         trialbal_accnt_id, trialbal_ending,
         SUM(subledger) AS subledger
    FROM trialbal
    LEFT OUTER JOIN (
                     SELECT costcat_wip_accnt_id AS accnt_id,
                            ROUND(wo_wipvalue, 2) AS subledger
                       FROM wo
                       JOIN itemsite ON wo_itemsite_id = itemsite_id
                       JOIN costcat ON itemsite_costcat_id = costcat_id
                    ) wo ON trialbal_accnt_id = accnt_id
   WHERE trialbal_accnt_id IN (SELECT costcat_wip_accnt_id
                            FROM costcat)
   GROUP BY trialbal_accnt_id, trialbal_ending
UNION ALL
  SELECT 'Shipping Asset', 6 AS seq, -1 AS sense,
         trialbal_accnt_id, trialbal_ending,
         SUM(subledger) AS subledger
    FROM trialbal
    LEFT OUTER JOIN (
                     SELECT costcat_shipasset_accnt_id AS accnt_id,
                            ROUND(shipitem_value, 2) AS subledger
                       FROM shipitem
                       JOIN shiphead ON shipitem_shiphead_id = shiphead_id
                       JOIN invhist ON shipitem_invhist_id = invhist_id
                       JOIN itemsite ON invhist_itemsite_id = itemsite_id
                       JOIN costcat ON itemsite_costcat_id = costcat_id
                      WHERE NOT shiphead_shipped
                    ) shipitem ON trialbal_accnt_id = accnt_id
   WHERE trialbal_accnt_id IN (SELECT costcat_shipasset_accnt_id
                                 FROM costcat)
   GROUP BY trialbal_accnt_id, trialbal_ending
)
SELECT ledger, glamount, subledger,
       (subledger - glamount) * sense AS varamt,
       CASE WHEN glamount != subledger THEN 'emphasis' END AS qtforegroundrole,
       xtindentrole
  FROM
       (
        SELECT ledger, sense,
               SUM(COALESCE(trialbal_ending, 0.0)) * sense AS glamount,
               SUM(COALESCE(subledger, 0.0)) AS subledger,
               seq, 0 AS xtindentrole
          FROM subledgers
         GROUP BY ledger, sense, seq
        UNION ALL
        SELECT formatGLAccountLong(trialbal_accnt_id), sense,
               COALESCE(trialbal_ending, 0.0) * sense,
               COALESCE(subledger, 0.0),
               seq, 1 AS xtindentrole
          FROM subledgers
       ) ledgers
 ORDER BY seq, xtindentrole;
